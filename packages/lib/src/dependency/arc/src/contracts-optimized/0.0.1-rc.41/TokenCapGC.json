{"contractName":"TokenCapGC","abi":[{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"parameters","outputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cap","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_cap","type":"uint256"}],"name":"setParameters","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_cap","type":"uint256"}],"name":"getParametersHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pre","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"_paramsHash","type":"bytes32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"post","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"when","outputs":[{"internalType":"enum GlobalConstraintInterface.CallPhase","name":"","type":"uint8"}],"payable":false,"stateMutability":"pure","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"getParametersHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_paramsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"post\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pre\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"setParameters\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"when\",\"outputs\":[{\"internalType\":\"enum GlobalConstraintInterface.CallPhase\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple global constraint to cap the number of tokens.\",\"methods\":{\"getParametersHash(address,uint256)\":{\"details\":\"calculate and returns the hash of the given parameters\",\"params\":{\"_cap\":\"the cap to check the total supply against.\",\"_token\":\"the token to add to the params.\"},\"return\":\"the calculated parameters hash\"},\"post(address,bytes32,bytes32)\":{\"details\":\"check the total supply cap.\",\"params\":{\"_paramsHash\":\"the parameters hash to check the total supply cap against.\"},\"return\":\"bool which represents a success\"},\"pre(address,bytes32,bytes32)\":{\"details\":\"check the constraint after the action. This global constraint only checks the state after the action, so here we just return true:\",\"return\":\"true\"},\"setParameters(address,uint256)\":{\"details\":\"adding a new set of parameters\",\"params\":{\"_cap\":\"the cap to check the total supply against.\",\"_token\":\"the token to add to the params.\"},\"return\":\"the calculated parameters hash\"},\"when()\":{\"details\":\"when return if this globalConstraints is pre, post or both.\",\"return\":\"CallPhase enum indication  Pre, Post or PreAndPost.\"}},\"title\":\"Token Cap Global Constraint\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/oren/daostack/arc/contracts/globalConstraints/TokenCapGC.sol\":\"TokenCapGC\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oren/daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0x83fb7666df1270aa8d857a631172b555dcf4f24fabba9a2a241d2b1ca2e574ef\",\"urls\":[\"bzz-raw://2499d07b8ba63936601c61884415a5f6848f1883e452efb608ccb181d98125e8\",\"dweb:/ipfs/QmeZCTMZ6KwJX1HLRZMMTZugskPDR6dvaNGEknEyyBePxt\"]},\"/Users/oren/daostack/arc/contracts/globalConstraints/TokenCapGC.sol\":{\"keccak256\":\"0x1d448583feded201277d4616fddee953604237d4a4a501f22ffc4033f1a683be\",\"urls\":[\"bzz-raw://d563e66e41214580375a44c130a2009ece3404185f460ec75878264e40f18322\",\"dweb:/ipfs/QmcoccCgQq564B6t8meQGYHzrzUNB1V1MCW77m7xdoufmR\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}","sourceMap":"245:2254:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:2254:5;;;;;;;","deployedSourceMap":"245:2254:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:2254:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;484:47;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;484:47:5;;:::i;:::-;;;;-1:-1:-1;;;;;484:47:5;;;;;;;;;;;;;;;;;;;;;1272:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1272:152:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1905:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1905:294:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1616:94;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1616:94:5;;;;;;;;;;;;;:::i;759:262::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;759:262:5;;;;;;;;:::i;2360:137::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;484:47;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;484:47:5;;;;;:::o;1272:152::-;1385:30;;;;;;;;-1:-1:-1;;1385:30:5;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1385:30:5;;;;;;1375:41;;;;;;1272:152::o;1905:294::-;1978:4;1999:23;;;;;;;;;;:29;-1:-1:-1;;;;;1999:29:5;:42;;;;1998:135;;-1:-1:-1;2105:10:5;:23;;;;;;;;;;;;:27;;;;2059:29;;:43;;-1:-1:-1;;;2059:43:5;;;;2105:27;;-1:-1:-1;;;;;2059:29:5;;;;:41;;:43;;;;;;;;;;:29;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;2059:43:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2059:43:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2059:43:5;:73;1998:135;1994:178;;;-1:-1:-1;2156:5:5;2149:12;;1994:178;-1:-1:-1;2188:4:5;1905:294;;;;;;:::o;1616:94::-;1699:4;1616:94;;;;;:::o;759:262::-;826:7;845:18;866:31;884:6;892:4;866:17;:31::i;:::-;907:10;:22;;;;;;;;;;:37;;-1:-1:-1;;;;;907:37:5;;-1:-1:-1;;;;;;907:37:5;;;;;;;954:26;:33;;;845:52;-1:-1:-1;;759:262:5;;;;:::o;2360:137::-;2450:40;2360:137;:::o","source":"pragma solidity 0.5.13;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"./GlobalConstraintInterface.sol\";\n\n\n/**\n * @title Token Cap Global Constraint\n * @dev A simple global constraint to cap the number of tokens.\n */\n\ncontract TokenCapGC {\n    // A set of parameters, on which the cap will be checked:\n    struct Parameters {\n        IERC20 token;\n        uint256 cap;\n    }\n\n    // Mapping from the hash of the parameters to the parameters themselves:\n    mapping (bytes32=>Parameters) public parameters;\n\n    /**\n     * @dev adding a new set of parameters\n     * @param  _token the token to add to the params.\n     * @param _cap the cap to check the total supply against.\n     * @return the calculated parameters hash\n     */\n    function setParameters(IERC20 _token, uint256 _cap) public returns(bytes32) {\n        bytes32 paramsHash = getParametersHash(_token, _cap);\n        parameters[paramsHash].token = _token;\n        parameters[paramsHash].cap = _cap;\n        return paramsHash;\n    }\n\n    /**\n     * @dev calculate and returns the hash of the given parameters\n     * @param  _token the token to add to the params.\n     * @param _cap the cap to check the total supply against.\n     * @return the calculated parameters hash\n     */\n    function getParametersHash(IERC20 _token, uint256 _cap) public pure returns(bytes32) {\n        return (keccak256(abi.encodePacked(_token, _cap)));\n    }\n\n    /**\n     * @dev check the constraint after the action.\n     * This global constraint only checks the state after the action, so here we just return true:\n     * @return true\n     */\n    function pre(address, bytes32, bytes32) public pure returns(bool) {\n        return true;\n    }\n\n    /**\n     * @dev check the total supply cap.\n     * @param  _paramsHash the parameters hash to check the total supply cap against.\n     * @return bool which represents a success\n     */\n    function post(address, bytes32 _paramsHash, bytes32) public view returns(bool) {\n        if ((parameters[_paramsHash].token != IERC20(0)) &&\n            (parameters[_paramsHash].token.totalSupply() > parameters[_paramsHash].cap)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @dev when return if this globalConstraints is pre, post or both.\n     * @return CallPhase enum indication  Pre, Post or PreAndPost.\n     */\n    function when() public pure returns(GlobalConstraintInterface.CallPhase) {\n        return GlobalConstraintInterface.CallPhase.Post;\n    }\n}\n","sourcePath":"/Users/oren/daostack/arc/contracts/globalConstraints/TokenCapGC.sol","ast":{"absolutePath":"/Users/oren/daostack/arc/contracts/globalConstraints/TokenCapGC.sol","exportedSymbols":{"TokenCapGC":[2037]},"id":2038,"nodeType":"SourceUnit","nodes":[{"id":1909,"literals":["solidity","0.5",".13"],"nodeType":"PragmaDirective","src":"0:23:5"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","id":1910,"nodeType":"ImportDirective","scope":2038,"sourceUnit":21018,"src":"25:64:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/oren/daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol","file":"./GlobalConstraintInterface.sol","id":1911,"nodeType":"ImportDirective","scope":2038,"sourceUnit":1908,"src":"90:41:5","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":"@title Token Cap Global Constraint\n@dev A simple global constraint to cap the number of tokens.","fullyImplemented":true,"id":2037,"linearizedBaseContracts":[2037],"name":"TokenCapGC","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TokenCapGC.Parameters","id":1916,"members":[{"constant":false,"id":1913,"name":"token","nodeType":"VariableDeclaration","scope":1916,"src":"361:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1912,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"361:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1915,"name":"cap","nodeType":"VariableDeclaration","scope":1916,"src":"383:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Parameters","nodeType":"StructDefinition","scope":2037,"src":"333:68:5","visibility":"public"},{"constant":false,"id":1920,"name":"parameters","nodeType":"VariableDeclaration","scope":2037,"src":"484:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters)"},"typeName":{"id":1919,"keyType":{"id":1917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"493:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"484:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters)"},"valueType":{"contractScope":null,"id":1918,"name":"Parameters","nodeType":"UserDefinedTypeName","referencedDeclaration":1916,"src":"502:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage_ptr","typeString":"struct TokenCapGC.Parameters"}}},"value":null,"visibility":"public"},{"body":{"id":1952,"nodeType":"Block","src":"835:186:5","statements":[{"assignments":[1930],"declarations":[{"constant":false,"id":1930,"name":"paramsHash","nodeType":"VariableDeclaration","scope":1952,"src":"845:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"845:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1935,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1932,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"884:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},{"argumentTypes":null,"id":1933,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"892:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1931,"name":"getParametersHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"866:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$21017_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (contract IERC20,uint256) pure returns (bytes32)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"866:31:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"845:52:5"},{"expression":{"argumentTypes":null,"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1936,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"907:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1938,"indexExpression":{"argumentTypes":null,"id":1937,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"918:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"907:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":1939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"907:28:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1940,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"938:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"src":"907:37:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"id":1942,"nodeType":"ExpressionStatement","src":"907:37:5"},{"expression":{"argumentTypes":null,"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1943,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"954:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1945,"indexExpression":{"argumentTypes":null,"id":1944,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"965:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"954:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"cap","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"954:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1947,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"983:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"954:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1949,"nodeType":"ExpressionStatement","src":"954:33:5"},{"expression":{"argumentTypes":null,"id":1950,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1004:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1928,"id":1951,"nodeType":"Return","src":"997:17:5"}]},"documentation":"@dev adding a new set of parameters\n@param  _token the token to add to the params.\n@param _cap the cap to check the total supply against.\n@return the calculated parameters hash","id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"setParameters","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"name":"_token","nodeType":"VariableDeclaration","scope":1953,"src":"782:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1921,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"782:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1924,"name":"_cap","nodeType":"VariableDeclaration","scope":1953,"src":"797:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"781:29:5"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"name":"","nodeType":"VariableDeclaration","scope":1953,"src":"826:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"825:9:5"},"scope":2037,"src":"759:262:5","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1971,"nodeType":"Block","src":"1357:67:5","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1965,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1402:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},{"argumentTypes":null,"id":1966,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"1410:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21094,"src":"1385:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1385:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1962,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21101,"src":"1375:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:41:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:43:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1961,"id":1970,"nodeType":"Return","src":"1367:50:5"}]},"documentation":"@dev calculate and returns the hash of the given parameters\n@param  _token the token to add to the params.\n@param _cap the cap to check the total supply against.\n@return the calculated parameters hash","id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"getParametersHash","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"name":"_token","nodeType":"VariableDeclaration","scope":1972,"src":"1299:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1954,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"1299:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1957,"name":"_cap","nodeType":"VariableDeclaration","scope":1972,"src":"1314:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1298:29:5"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"name":"","nodeType":"VariableDeclaration","scope":1972,"src":"1348:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1348:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1347:9:5"},"scope":2037,"src":"1272:152:5","stateMutability":"pure","superFunction":null,"visibility":"public"},{"body":{"id":1985,"nodeType":"Block","src":"1682:28:5","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1982,"id":1984,"nodeType":"Return","src":"1692:11:5"}]},"documentation":"@dev check the constraint after the action.\nThis global constraint only checks the state after the action, so here we just return true:\n@return true","id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"pre","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1629:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1976,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1638:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1978,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1647:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1647:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1628:27:5"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1676:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1980,"name":"bool","nodeType":"ElementaryTypeName","src":"1676:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1675:6:5"},"scope":2037,"src":"1616:94:5","stateMutability":"pure","superFunction":null,"visibility":"public"},{"body":{"id":2025,"nodeType":"Block","src":"1984:215:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1997,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1999:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1999,"indexExpression":{"argumentTypes":null,"id":1998,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2010:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1999:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"1999:29:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2001,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21017,"src":"2032:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$21017_$","typeString":"type(contract IERC20)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2032:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"src":"1999:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1998:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2006,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2059:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":2008,"indexExpression":{"argumentTypes":null,"id":2007,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2070:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2059:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"2059:29:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":20955,"src":"2059:41:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2059:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2012,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2105:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":2014,"indexExpression":{"argumentTypes":null,"id":2013,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2116:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cap","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"2105:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2059:73:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2058:75:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1998:135:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2022,"nodeType":"IfStatement","src":"1994:178:5","trueBody":{"id":2021,"nodeType":"Block","src":"2135:37:5","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2156:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1996,"id":2020,"nodeType":"Return","src":"2149:12:5"}]}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2188:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1996,"id":2024,"nodeType":"Return","src":"2181:11:5"}]},"documentation":"@dev check the total supply cap.\n@param  _paramsHash the parameters hash to check the total supply cap against.\n@return bool which represents a success","id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"post","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1919:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"1919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1990,"name":"_paramsHash","nodeType":"VariableDeclaration","scope":2026,"src":"1928:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1928:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1992,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1949:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1949:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1918:39:5"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1978:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"1978:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1977:6:5"},"scope":2037,"src":"1905:294:5","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":2035,"nodeType":"Block","src":"2433:64:5","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2031,"name":"GlobalConstraintInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2450:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GlobalConstraintInterface_$1907_$","typeString":"type(contract GlobalConstraintInterface)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CallPhase","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"2450:35:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CallPhase_$1879_$","typeString":"type(enum GlobalConstraintInterface.CallPhase)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Post","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2450:40:5","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"}},"functionReturnParameters":2030,"id":2034,"nodeType":"Return","src":"2443:47:5"}]},"documentation":"@dev when return if this globalConstraints is pre, post or both.\n@return CallPhase enum indication  Pre, Post or PreAndPost.","id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"when","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"2373:2:5"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"name":"","nodeType":"VariableDeclaration","scope":2036,"src":"2396:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"},"typeName":{"contractScope":null,"id":2028,"name":"GlobalConstraintInterface.CallPhase","nodeType":"UserDefinedTypeName","referencedDeclaration":1879,"src":"2396:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"}},"value":null,"visibility":"internal"}],"src":"2395:37:5"},"scope":2037,"src":"2360:137:5","stateMutability":"pure","superFunction":null,"visibility":"public"}],"scope":2038,"src":"245:2254:5"}],"src":"0:2500:5"},"legacyAST":{"absolutePath":"/Users/oren/daostack/arc/contracts/globalConstraints/TokenCapGC.sol","exportedSymbols":{"TokenCapGC":[2037]},"id":2038,"nodeType":"SourceUnit","nodes":[{"id":1909,"literals":["solidity","0.5",".13"],"nodeType":"PragmaDirective","src":"0:23:5"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","id":1910,"nodeType":"ImportDirective","scope":2038,"sourceUnit":21018,"src":"25:64:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/oren/daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol","file":"./GlobalConstraintInterface.sol","id":1911,"nodeType":"ImportDirective","scope":2038,"sourceUnit":1908,"src":"90:41:5","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":"@title Token Cap Global Constraint\n@dev A simple global constraint to cap the number of tokens.","fullyImplemented":true,"id":2037,"linearizedBaseContracts":[2037],"name":"TokenCapGC","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TokenCapGC.Parameters","id":1916,"members":[{"constant":false,"id":1913,"name":"token","nodeType":"VariableDeclaration","scope":1916,"src":"361:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1912,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"361:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1915,"name":"cap","nodeType":"VariableDeclaration","scope":1916,"src":"383:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Parameters","nodeType":"StructDefinition","scope":2037,"src":"333:68:5","visibility":"public"},{"constant":false,"id":1920,"name":"parameters","nodeType":"VariableDeclaration","scope":2037,"src":"484:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters)"},"typeName":{"id":1919,"keyType":{"id":1917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"493:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"484:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters)"},"valueType":{"contractScope":null,"id":1918,"name":"Parameters","nodeType":"UserDefinedTypeName","referencedDeclaration":1916,"src":"502:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage_ptr","typeString":"struct TokenCapGC.Parameters"}}},"value":null,"visibility":"public"},{"body":{"id":1952,"nodeType":"Block","src":"835:186:5","statements":[{"assignments":[1930],"declarations":[{"constant":false,"id":1930,"name":"paramsHash","nodeType":"VariableDeclaration","scope":1952,"src":"845:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"845:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1935,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1932,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"884:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},{"argumentTypes":null,"id":1933,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"892:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1931,"name":"getParametersHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"866:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$21017_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (contract IERC20,uint256) pure returns (bytes32)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"866:31:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"845:52:5"},{"expression":{"argumentTypes":null,"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1936,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"907:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1938,"indexExpression":{"argumentTypes":null,"id":1937,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"918:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"907:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":1939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"907:28:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1940,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"938:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"src":"907:37:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"id":1942,"nodeType":"ExpressionStatement","src":"907:37:5"},{"expression":{"argumentTypes":null,"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1943,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"954:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1945,"indexExpression":{"argumentTypes":null,"id":1944,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"965:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"954:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"cap","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"954:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1947,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"983:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"954:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1949,"nodeType":"ExpressionStatement","src":"954:33:5"},{"expression":{"argumentTypes":null,"id":1950,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1004:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1928,"id":1951,"nodeType":"Return","src":"997:17:5"}]},"documentation":"@dev adding a new set of parameters\n@param  _token the token to add to the params.\n@param _cap the cap to check the total supply against.\n@return the calculated parameters hash","id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"setParameters","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"name":"_token","nodeType":"VariableDeclaration","scope":1953,"src":"782:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1921,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"782:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1924,"name":"_cap","nodeType":"VariableDeclaration","scope":1953,"src":"797:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"781:29:5"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"name":"","nodeType":"VariableDeclaration","scope":1953,"src":"826:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"825:9:5"},"scope":2037,"src":"759:262:5","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1971,"nodeType":"Block","src":"1357:67:5","statements":[{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1965,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1402:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},{"argumentTypes":null,"id":1966,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"1410:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21094,"src":"1385:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1385:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1962,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21101,"src":"1375:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:41:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:43:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1961,"id":1970,"nodeType":"Return","src":"1367:50:5"}]},"documentation":"@dev calculate and returns the hash of the given parameters\n@param  _token the token to add to the params.\n@param _cap the cap to check the total supply against.\n@return the calculated parameters hash","id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"getParametersHash","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"name":"_token","nodeType":"VariableDeclaration","scope":1972,"src":"1299:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":1954,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":21017,"src":"1299:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":1957,"name":"_cap","nodeType":"VariableDeclaration","scope":1972,"src":"1314:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1298:29:5"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"name":"","nodeType":"VariableDeclaration","scope":1972,"src":"1348:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1348:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1347:9:5"},"scope":2037,"src":"1272:152:5","stateMutability":"pure","superFunction":null,"visibility":"public"},{"body":{"id":1985,"nodeType":"Block","src":"1682:28:5","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1982,"id":1984,"nodeType":"Return","src":"1692:11:5"}]},"documentation":"@dev check the constraint after the action.\nThis global constraint only checks the state after the action, so here we just return true:\n@return true","id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"pre","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1629:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1976,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1638:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1978,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1647:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1647:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1628:27:5"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"name":"","nodeType":"VariableDeclaration","scope":1986,"src":"1676:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1980,"name":"bool","nodeType":"ElementaryTypeName","src":"1676:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1675:6:5"},"scope":2037,"src":"1616:94:5","stateMutability":"pure","superFunction":null,"visibility":"public"},{"body":{"id":2025,"nodeType":"Block","src":"1984:215:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1997,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1999:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":1999,"indexExpression":{"argumentTypes":null,"id":1998,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2010:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1999:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"1999:29:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2001,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21017,"src":"2032:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$21017_$","typeString":"type(contract IERC20)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2032:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"src":"1999:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1998:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2006,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2059:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":2008,"indexExpression":{"argumentTypes":null,"id":2007,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2070:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2059:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"2059:29:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$21017","typeString":"contract IERC20"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":20955,"src":"2059:41:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2059:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2012,"name":"parameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2105:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Parameters_$1916_storage_$","typeString":"mapping(bytes32 => struct TokenCapGC.Parameters storage ref)"}},"id":2014,"indexExpression":{"argumentTypes":null,"id":2013,"name":"_paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2116:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Parameters_$1916_storage","typeString":"struct TokenCapGC.Parameters storage ref"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cap","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"2105:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2059:73:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2058:75:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1998:135:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2022,"nodeType":"IfStatement","src":"1994:178:5","trueBody":{"id":2021,"nodeType":"Block","src":"2135:37:5","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2156:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1996,"id":2020,"nodeType":"Return","src":"2149:12:5"}]}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2188:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1996,"id":2024,"nodeType":"Return","src":"2181:11:5"}]},"documentation":"@dev check the total supply cap.\n@param  _paramsHash the parameters hash to check the total supply cap against.\n@return bool which represents a success","id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"post","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1919:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"1919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1990,"name":"_paramsHash","nodeType":"VariableDeclaration","scope":2026,"src":"1928:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1928:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1992,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1949:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1949:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1918:39:5"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"name":"","nodeType":"VariableDeclaration","scope":2026,"src":"1978:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"1978:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1977:6:5"},"scope":2037,"src":"1905:294:5","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":2035,"nodeType":"Block","src":"2433:64:5","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2031,"name":"GlobalConstraintInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2450:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GlobalConstraintInterface_$1907_$","typeString":"type(contract GlobalConstraintInterface)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CallPhase","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"2450:35:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CallPhase_$1879_$","typeString":"type(enum GlobalConstraintInterface.CallPhase)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Post","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2450:40:5","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"}},"functionReturnParameters":2030,"id":2034,"nodeType":"Return","src":"2443:47:5"}]},"documentation":"@dev when return if this globalConstraints is pre, post or both.\n@return CallPhase enum indication  Pre, Post or PreAndPost.","id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"when","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"2373:2:5"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"name":"","nodeType":"VariableDeclaration","scope":2036,"src":"2396:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"},"typeName":{"contractScope":null,"id":2028,"name":"GlobalConstraintInterface.CallPhase","nodeType":"UserDefinedTypeName","referencedDeclaration":1879,"src":"2396:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_CallPhase_$1879","typeString":"enum GlobalConstraintInterface.CallPhase"}},"value":null,"visibility":"internal"}],"src":"2395:37:5"},"scope":2037,"src":"2360:137:5","stateMutability":"pure","superFunction":null,"visibility":"public"}],"scope":2038,"src":"245:2254:5"}],"src":"0:2500:5"},"compiler":{"name":"solc","version":"0.5.13+commit.5b0b510c.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.20","updatedAt":"2020-02-10T15:44:06.064Z","devdoc":{"details":"A simple global constraint to cap the number of tokens.","methods":{"getParametersHash(address,uint256)":{"details":"calculate and returns the hash of the given parameters","params":{"_cap":"the cap to check the total supply against.","_token":"the token to add to the params."},"return":"the calculated parameters hash"},"post(address,bytes32,bytes32)":{"details":"check the total supply cap.","params":{"_paramsHash":"the parameters hash to check the total supply cap against."},"return":"bool which represents a success"},"pre(address,bytes32,bytes32)":{"details":"check the constraint after the action. This global constraint only checks the state after the action, so here we just return true:","return":"true"},"setParameters(address,uint256)":{"details":"adding a new set of parameters","params":{"_cap":"the cap to check the total supply against.","_token":"the token to add to the params."},"return":"the calculated parameters hash"},"when()":{"details":"when return if this globalConstraints is pre, post or both.","return":"CallPhase enum indication  Pre, Post or PreAndPost."}},"title":"Token Cap Global Constraint"},"userdoc":{"methods":{}}}